buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.9"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = config.mod.version
group = config.mod.group
archivesBaseName = config.mod.name

def getGitRef() {
  try {
    def stdout = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'rev-parse', '--short', 'HEAD'
      standardOutput = stdout
    }
    return stdout.toString().trim()
  } catch (Throwable e) {
    return "unknown"
  }
}

if (System.getenv("PROMOTED_NUMBER") != null)
    version += ".${System.getenv("PROMOTED_NUMBER")}"
else if (System.getenv("BUILD_NUMBER") != null)
    version += ".${System.getenv("BUILD_NUMBER")}"
else
    version += "+" + getGitRef()

ext.simpleVersion = version
version = "MC${config.minecraft.version}-${project.version}"

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "run"
    mappings = config.minecraft.mappings
    replace "@VERSION@", project.simpleVersion
}

repositories {
    maven { url "http://dvs1.progwml6.com/files/maven" }
    maven { url = "http://maven.covers1624.net" }
}

dependencies {
    compile "mezz.jei:jei_${config.minecraft.version}:${config.jei.version}"
    deobfCompile "cofh:RedstoneFlux:1.12-${config.rf.version}:universal"
}

processResources {
    inputs.property "version", project.simpleVersion
    inputs.property "mcversion", project.minecraft.version
    inputs.property "fversion", config.forge.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.simpleVersion, 'mcversion':project.minecraft.version, 'fversion':config.forge.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // Move access transformer to META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes FMLAT: "bedrockores_at.cfg"
    }
}

curseforge {
    apiKey = project.hasProperty("curseForgeApiKey") ? project.curseForgeApiKey : ""
    project {
        id = config.curse.project.id
        releaseType = config.curse.project.releaseType
        changelogType = "markdown"
        changelog = file("changelog.md")
        addGameVersion config.minecraft.version
        addGameVersion "1.12.1"
        addGameVersion "1.12.2"
        addGameVersion "Java 8"
    }
}

// this is needed for IntelliJ so we don't have to copy over the assets manually every time
idea {
    module {
        outputDir = file('build/classes/main')
    }
}
